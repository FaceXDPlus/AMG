------ Version 1.1.8 ------
Recommended Unity version is 2018.2.0f2, but is compatible down to 5.6.6f2.

-- FEATURES --
- [Components] Added 'Non-Drawing Graphic' component to receive pointer events without having to draw a graphic.
- [PanelExpander] New component that allows easy setup for a FAB/button/panel to smoothly transition into a panel (example scene #20 has been added to demonstrate its use).
- [Ripples] Added SDF shadowed ripples (Good use case is the new PanelExpander).
- [Search] Included a fuzzy search extension library to the string class, allowing for more fault-tolerant search within apps (See license in Utils/FuzzyStrings).

-- IMPROVEMENTS --
- [Dialogs] Added constructor to OptionData to create an OptionData with just a text.
- [DialogSimpleList] Added methods to AddItem and ClearItems at runtime.
- [InputFields] Added ExactLengthTextValidator to TextValidatorUtils.
- [Extensions] Added RectTransform methods to set position/local position regardless of pivot.
- [PrefabManager] Cleaned up runtime instantiation of MaterialUI components.
- [Sliders] Added customizable suffix for value label.
- [VectorImages] Added fuzzy search and pagination to icon picker to improve performance and search quality (especially fonts with thousands of icons).

-- FIXES --
- [AnimatedShadow] Fixed issue with attempted access to AnimatedShadow component after scene has been destroyed.
- [Dialogs] Added a check on the gameObject before doing something with it in the hide animation via callbacks.
- [Dialogs] Hide the entire body of the DialogAlert if the body string is null or empty.
- [Extensions] Updated IsPrefabInstance to also work with 2018.2.
- [Sliders] Fixed initialization issues.
- [VectorImages] Weather icon downloader updated to reflect changes to source.
- [VectorImageManager] Window no longer spams warnings on newer Unity versions.

-- NOTES --
- [VectorImageManager] Removed support for importing the Ionicons pack, as the source no longer hosts the required font (previously imported pack will continue to work with the VectorImage component).
- [VectorImageManager] Split the FontAwesome importer into 3 parts to match the new format of the source packs (regular, solid, brands) (previously imported pack will continue to work seperately from the new ones with the VectorImage component).

------ Version 1.1.7 ------
Recommended Unity version is 5.6.1f1, but is compatible with 5.5.0f3.

-- FEATURES --
- [Scaling] New MaterialUIScaler component to better handle scaling.

-- IMPROVEMENTS --
- [AutoTween] Added public property for onTweenEnd callback.
- [Dialogs] Dialogs of any type can now be submitted with enter/return, or dismissed with back/cancel keys.
- [Editor] Inspector layout and property representation improvements for VectorImages and MaterialButtons.
- [Editor] EditorUpdate class has been removed and components have been modified to update themselves when needed. This should improve MaterialUI component stability, especially with prefabs.
- [Ripples] IRippleCreator is no longer required to create ripples, if the callbacks aren't needed.
- [Ripple Shader] Updated to use UnityObjectToClipPos() on supported Unity versions, which (according to Unity) should improve performance.
- [Snackbars] Added maxQueueSize option.
- [TweenManager] TweenManager can now get an AutoTween reference from its id/tween index.
- [Toasts] Added maxQueueSize option.
- [VectorImageManager] Now displays the number of icons imported when importing a set.
- [Zip] Added a zip method (previously only unzip what added).

-- FIXES --
- [AnimatedShadows] Fixed NullReferenceExceptions that sometimes occurs on AnimatedShadows.
- [DatePicker] Fixed broken DatePicker.
- [Date Pickers] Fixed 'square' prev/next month button ripples.
- [DialogAnimator] Use GameObject.Destroy instead of Object.Destroy.
- [Dropdowns] Dropdowns should now be correctly positioned in any canvas render mode, with any scaling settings.
- [Ripples] Ripples now start from the correct position in camera and world space canvas render modes.
- [Slider] Fixed slider behaviour in whole numbers mode.
- [Slider] Fixed slider handle y pos.
- [Snackbar] Fix possible null pointer error if the actionName parameter for the snackbar is null.

-- NOTES --
- Due to the tweening system (introduced in v1.1.0) working in a different way, EasyTween is still no longer be able to tween values. This functionality will be replaced in v1.2.0.
- The new Lists system which was supposed to be in this update isn't quite ready yet, so it is not included in this version.
- The 'LitJson' library is no longer included/used as Unity 5.3+ includes its own json serialization methods.
- The Kenney iconfont repo is no longer active, so the importer has been removed. You can still manually find and import the icons using one of the custom file importers (eg. IcoMoon).

------ Version 1.1.6 ------
Recommended Unity version is 5.4.1f1.

-- IMPROVEMENTS --
- [Buttons] Added option to reset the button's ripple and highlight upon being disabled.
- [DialogPrompt] InputFields are now restricted to one line.
- [Extensions] Improved CopySettingsToOtherCanvas method.
- [Extensions] Added a RectTransform extension to get the root canvas.
- [InputField] The customTextValidator can now be set to null.
- [Menu] Added option to create a Raw Image under the MaterialUI create menu.
- [Pickers] The ShowTimePicker and ShowDatePicker now return the newly-created dialog, instead of null.
- [Ripples] Added support for RectMask2D (major performance boost).
- [Ripples] 'Match Size' auto size mode now takes size percent into account.
- [Ripples] Improved antialiasing on ripple edges (less blurry at larger scales and less aliased at smaller scales).
- [Ripples] Ripple graphic edges now more closely match their rect edges.
- [Ripples] Added ability to instantly clear all ripples from a MaterialRipple component.
- [TextValidator] Renamed LengthTextValidator to MinLengthTextValidator.
- [TextValidator] Added MaxLengthTextValidator.
- [TweenManager] TweenManager now persists across scenes, and should no longer throw a warning when a scene or the application is closed.
- [TweenManager] Added a 'timed callback' method to invoke an action after a specified amount of time.
- [Utils] Added a method to get the physical diagonal length of the display.
- [VectorImagePickerWindow] Added the name of the currently selected icon on the bottom left of the window.

-- FIXES --
- [DialogRadioList] Fixed issue when clicking on the radio button and not the row (item was not selected).
- [DialogTimePicker] Was not setting the time to the correct hour and correct AM/PM.
- [Dropdowns] Fixed dropdowns when root canvas is not the root object.
- [Dropdowns] Fixed dropdown size when scaled.
- [Dropdowns] Select(int) now works when the dropdown is not open.
- [MaterialUIScaler] Scale factor is now more consistent across rendering modes, fixing some of the scaling issues (such as Dropdowns, InputFields).
- [Pickers] Fixed possible issue with DatePicker where two days could be selected at the same time.
- [Sprites] TextureFormat of every sprite is now TrueColor (fix the gray textures issues on iOS) and maxSize 512 for consistency (also added some sprites to the MaterialUI atlas).
- [TabView] Fixed tabs thinking they need to be longer than they actually need to be at higher scaling factors.
- [Toast] Make sure the toast anim is hidden at the end of the animation (there's some cases where the toast keeps standing on the screen and never disappear).
- [VectorIcons] Removed 'Octicons' downloader/importer as they no longer support icon fonts.
- [VectorImages] Fixed IcoMoon file importing.

-- NOTES --
- Due to the tweening system (introduced in v1.1.0) working in a different way, EasyTween is still no longer be able to tween values. This functionality will be replaced in v1.2.0.
- Github's Octicons repo no longer supports icon fonts, so the importer has been removed. You can still manually import the icons using one of the file importers (eg. IcoMoon).

-- EXAMPLE SCENES UPDATED --
- [Examples] Updated Ripple example scene.
- [Examples] Fixed 'set progress' and 'set progress animated' buttons in Progress example scene.

------ Version 1.1.5 ------
Recommended Unity version is 5.3.5f1.

-- IMPROVEMENTS --
- [DialogPrompt] Now uses correct validation to set interactable true/false on the affirmative button.
- [DialogPrompt] Will focus on the first input field when opened.
- [Extensions] Added Transform extension method GetRootCanvas to find the root canvas from a transform.
- [MaterialColor] ClosestMaterialColor() now returns a closer blue when given a color with Color.blue's values as an argument (previously returned a more purple color).
- [MaterialUIScaler] Added callback for when the orientation is changed.
- [Pickers] DialogTimePicker now accepts and returns a DateTime, rather than seperate hours, mins, and a bool for am/pm.
- [Toast] Added a Show toast method that takes content and duration.

-- FIXES --
- [Dialogs] Having the root canvas childed to another object will no longer break dialogs.
- [InputFields] Added some more null-checking to allow InputFields without counter or validation text objects.
- [MaterialUIScaler] Changing CanvasScaler reference resolution in the inspector now behaves better when MaterialUIScaler's 'match orientation to screen' option is enabled.
- [Screens] Fixed Canvas potentially being destroyed before GraphicRaycaster, which could cause issues.
- [TabView] Fixed issue where if the orientation was changed at runtime, the TabView's layout would break.

-- NOTES --
- Due to the tweening system (introduced in v1.1.0) working in a different way, EasyTween is still no longer be able to tween values. This functionality will be replaced in v1.2.0.

-- EXAMPLE SCENES UPDATED --
- [Pickers] Pickers example script updated to use new DialogTimePicker DateTime code.

------ Version 1.1.4 ------
Recommended Unity version is 5.3.5f1.

-- FEATURES --- 
- [AppBar] Added MaterialAppBar component to tween app bar colors, and convinience inspector fields for child buttons.
- [Buttons] Added RefreshRippleMatchColor method to refresh the ripple's color to match the target graphic, at any desired time.
- [Dialogs] Added CreateDialogDatePicker in DialogManager.
- [Dialogs] Added localisation methods to DialogDatePicker (SetDayOfWeek + CultureInfo + DateFormatPattern).
- [DragEventSender] Added options to  have seperate left/right and up/down, or horizontal and vertical.
- [Extensions] Added InvokeIfNotNull extension method to Func<T>.
- [MaterialColor] Added method to calculate whether light or dark icons/text are more suitable over a certain color.
- [MaterialColor] Added ColorDistance and ClosestMatrialColor methods to help with finding relevant MD colors from various colors.
- [MaterialColor] Added ClosestMaterialColorSet() method to get the closest material color set to a given color.
- [MaterialColor] Added OffsetShade() method to get a lighter or darker color from the Material palette to a given color.
- [Ripples] Added ability to match the Ripple color to a Graphic's color (eg. Button icon or text) for easier theming.
- [Ripples] Added an option to MaterialRipple to explicitly disable ripples, instead of just creating one with a size of 0.
- [Utils] Added SetBoolValueIfTrue method for easier bool handling in some cases.

-- IMPROVEMENTS --
- [AnimatedShadow] Improved tweening behaviour.
- [Dialogs] DialogDatePicker now has a cancel callback.
- [Dialogs] isModal is now able to be modified at runtime.
- [Editor] 'Selection Controls' in create menu renamed to 'Toggles'.
- [InputFields] TextValidator classes can now have a custom error message (for localisation for example).
- [InputFields] IsSelected method is now public.
- [Inspector] Added custom foldouts to various MaterialUI components for better organization.
- [InstantiationHelper] Modified HelpInstantiate method to use int[] instead of enum[], so it's more easily extendable.
- [MaterialColor] Rewrote the internal color values to be neater, and more easily accessible without extra overhead.
- [MaterialUIScaler] Added functionality to allow reference resolution orientation change upon screen orientation change.
- [ProgressIndicators] (Linear) Bar (child) height no longer hardcoded to 4, but now matches the root object's height, allowing for taller/shorter bars.
- [ProgressIndicator] Added custom inspectors for Circular and Linear indicators.
- [ProgressIndicators] When calling Show(), the indeterminate animation is now optional.
- [Ripples] Improved highlight behaviour when background normal color is transparent and not the same color (apart from alpha) as the highlight color.
- [Ripples] Now use a *much* faster rendering/smoothing method, which should greatly improve mobile performance.
- [Ripples] Improved behaviour in worldspace mode.
- [Sliders] animationDuration is greyed out in the inspector if the popup is disabed.
- [Texts] Rich text disabled by default.
- [Utils] Added SetBoolValueIfTrue method for easier bool handling in some cases.
- [VectorImagePickerWindow] Added ability to modify multiple VectorImageData items per pick (For VectorImages, Buttons etc).

-- FIXES --
- [Buttons] Setting values now works properly when multiple buttons are selected.
- [Dialogs] Now work in worldspace mode.
- [Dropdowns] Now work in worldspace mode.
- [InputFields] Removed a call that was causing issues with OpenGL.
- [InspectorFields] VectorImage fields now update their respective VectorImage/s when picked in play mode.
- [InputFields] Animations now use actual animationDuration.
- [NavDrawer] Now refreshes background size to avoid part of screen not being covered if scaling/orientation changes.
- [ProgressIndicators] Fixed issue with the 'starts hidden' option and hiding in edit mode.
- [Sliders] Changes to slider colors will now update the slider's colors in the scene.
- [Sliders] Added public UpdateColors() method to force the slider to update its colors.
- [Sliders] Fix issue of a slider input field not displaying 0 if the slider value is 0 (because of using ##.##).
- [TabViews] Now work in worldspace mode.
- [VectorImageManager] Updated CommunityMD set download to work with updated source.
- [VectorImageManager] Updated Octicons set download to work with updated source.

-- NOTES --
- [Ripples] Now use a *much* faster rendering/smoothing method, which should greatly improve mobile performance. This will eventually make its way to other graphics that must be crisp, but change size often (eg. radiobutton dots, slider handle).
- As ripples now use a custom material, using other custom materials now won't work.
- Due to the tweening system (introduced in v1.1.0) working in a different way, EasyTween is still no longer be able to tween values. This functionality will be replaced in v1.2.0.

-- EXAMPLE SCENES UPDATED --
- [Animation] Improved visuals.
- [AppBar] Added MaterialAppBar to example scene.
- [Dialogs] Small fix to the dialog example script (was using the wrong string array).
- [Dialogs] Show toast instead of printing to console in the prompt dialog example scene.
- [NavDrawer] EventSystem dragThreshold raised to 10, making it easier to press buttons in the NavDrawer.
- [NavDrawer] DragEventSender added to NavDrawer buttons, also making them easier to press.
- [ProgressIndicators] Fixed 'animate' option for SetProgress being flipped.

------ Version 1.1.3 ------
Recommended Unity version is 5.3.4f1, compatible down to 5.2.0f3.

-- FEATURES --
- [DragEventSender] Added DragEventSender to help send input events to various objects, depending on the orientation of the drag.

-- IMPROVEMENTS --
- [Dialogs] Added Dialog Prompt with option to display only one or two fields.
- [Extensions] Added Transform extension to set the parent and scale.
- [Snackbar] Added an overload to the Show method to specify the duration.
- [ToastManager] Added optional parameters to specify on which Canvas to show the toast.

-- FIXES --
- [Dropdown] Fixed weird positioning when scaled.
- [MaterialButton] Fixed issue where text would be improperly scaled if a MaterialButton is created in an empty scene.
- [MaterialSlider] Fixed bug with inputting text with the input field when the slider has a min value.
- [InputField] Add DirectoryExistsTextValidator and FileExistsTextValidator.
- [ProgressIndicators] Fixed issue with LinearProgressIndicators and 'Hide on start'.
- [Ripples] Fixed issues with non screen-overlay canvas modes.
- [Toast] Now correctly initialise (for when you add the ToastManager in the scene yourself).

-- NOTES --
- Due to the tweening system (introduced in v1.1.0) working in a different way, EasyTween is still no longer be able to tween values. This functionality will be replaced in v1.2.0.

-- EXAMPLE SCENES UPDATED --
- [Dialogs] Added example for new prompt dialog.
- [TabView] Added DragEventSender example to TabView example scene.
- [VectorImages] Added an example on how to set an icon via code, including from a custom icon font. (See the example scene script).

------ Version 1.1.2 ------
Recommended Unity version is 5.3.3f1, compatible down to 5.2.0f3.

-- FIXES --
- [NavDrawer] Now takes scaling into account when being dragged in/out.
- [NavDrawer] Fixed background size when scaled.
- [ProgressIndicators] "Start Hidden" now works with Progress Indicators with a label.
- [TabView] "Only show selected page" feature will check to see if the pages are enabled/disabled before enabling/disabling them.

-- NOTES --
- Due to the tweening system (introduced in v1.1.0) working in a different way, EasyTween is still no longer be able to tween values. This functionality will be replaced in v1.2.0.

------ Version 1.1.1 ------
Recommended Unity version is 5.3.3f1, compatible down to 5.2.0f3.

-- IMPROVEMENTS --
- [Dropdown] Added new verticalPivotType modes: AboveBase, Top, Bottom, BelowBase.
- [Dropdown] Added optional delay to input after dropdown is shown to help prevent it from accidentally being closed straight away.
- [Menu] Added option to create empty UI objects with various layout components.
- [Menu] Added option create horizontal and vertical circle progress indicators with a label.
- [ProgressIndicators] Added option to start hidden.
- [TweenManager] Added Generic tween methods.
- [VectorImageData/ImageData] Added methods to check if the object contains actual image data.

-- FIXES --
- [Button] preferredWidth now returns the proper value.
- [Dropdown] Fixed issue where dropdowns with lots of items sometimes wouldn't animate properly.
- [Dropdown] Fixed issues with verticalPivotType.
- [Dropdown] When showing, dropdown won't have an icon object for list items that don't have any image data.
- [Snackbar] Fixed button position on portrait screens.
- [Tween System] Fixed bug where using Custom Curves wouldn't work.

-- NOTES --
- Due to the tweening system (introduced in v1.1.0) working in a different way, EasyTween is still no longer be able to tween values. This functionality will be replaced in v1.2.0.

-- APIS UPDATED --
- MaterialDropdown now has new verticalPivot enums. You may want to double-check that these haven't changed on your dropdowns since the last version.

------ Version 1.1.0 ------
Recommended Unity version is 5.3.2f1, compatible down to 5.2.2f1.

-- IMPROVEMENTS --
- [Buttons] Massive performance improvements in both the editor and (especially) at runtime!
- [Buttons] A bit easier to use, thanks to an inspector redecoration and unneeded method/variable culling.
- [Components] Almost every component now has a interactable boolean, similar to that on standard uGUI components. (interactable can still be toggled manually on uGUI components for custom 'disabled' behaviour).
- [DialogAnimator] Added ability to choose slide in/out direction and tween type (you can see an example of how to use that in the Dialog example scene).
- [Divider] Added ability to create vertical dividers.
- [Icons] Update MaterialDesign icon set (41 new icons).
- [InputField] Improved the use of customTextValidator, we now just need to call IsTextValid() instead of ValidateText(text, validationText).
- [InputField] Added option to only validate text upon first selection of InputField, rather than on Start.
- [Panel] Added more creation options (go to MaterialUI -> Panel to see them).
- [Performance] The sprites used by MaterialUI are now packed into a spritesheet for better use of space at runtime.
- [Performance] Improved shadow behaviour and performance, now each shadow doesn't have its own Update().
- [Ripple] New 'SetGraphicColor' method correctly sets the graphic's color, regardless of its ripple/highlight settings. Smooth animation to new color is optional.
- [Ripple] Added property 'rippleColor' to change ripple color and automatically update the highlight color.
- [Ripple] Added highlight blend amount option (to specify the amount of blend to use when automatic highlight is selected).
- [SelectionControl] Now has some layout components so it's always nicely aligned in every layout group.
- [Slider] Added option to make left/right content opacity less, when not interactable.
- [Tab] Added a simple SetPage method that you can now call from the UnityEvent system in the inspector to change tabs.
- [Tab] Renamed pageEnabled to interactable.
- [Tab] Lower disabled Tab opacity.
- [Tween] Massively improved the Tween engine, which is now way faster! But will break your script if you used the old one.
- [Tween] Completely rewrote the tweening engine which now uses a new tweening method and pools tweens, resulting in a system which is now orders of magnitude faster! It's also a bit easy to use and keep track of active tweens.

-- FIXES --
- [Dialog] No longer overrides parentCanvas if it is set manually.
- [Dialog] Fixed the dialog example scene.
- [Divider] Now have a min width/height (depending on horizontal or vertical divider) of 1.
- [Dropdown] Fixed bug where the first expansion of a dropdown would be positioned incorrectly, and sometimes go offscreen.
- [Dropdown] Fixed issue where Dropdowns created under a LayoutGroup would sometimes have a width of 0.
- [InputField] No longer rebuilds the canvas every frame when it doesn't need to.
- [Ripple] Fixed issue where enabling 'auto highlight color' at runtime wouldn't automatically refresh the color.
- [Screen] Fixed issue where transitioning to the already current screen would break things.
- [Slider] Fixed behaviour if 'hasPopup' is false.
- [Slider] Fixed incorrect icon color (it was too dark).
- [Slider] Fixed issue where Sliders created under a LayoutGroup would sometimes have a width of 0.
- [Toggles] Fixed issue where RadioButtons would have incorrect labels on Start().
- [Tween] Removed from 'Add Component' menu as it is not a component to add on any GameObject.
- [VectorImage] Icons where not updated when changed via the Icon Picker while the Editor is playing.

-- NOTES --
- Due to the new tweening system working in a different way, EasyTween will no longer be able to tween values. This functionality will be replaced in the next update.

-- APIS UPDATED --
- The TweenManager and AutoTween classes have been changed dramatically. Check out the 'Animation' example scene to learn more about it.

-- EXAMPLE SCENES UPDATED --
(You might want to check these out to take a look at some of the above new features)
- *NEW* Animation (Shows how the Tweening system works)
- Dialogs (added example on how to change dialog show/hide directions)
- Inputs (updated example on how to use validation via script)

-- PREFABS UPDATED --
(* You may need to re-create/re-instantiate these in your project to apply some of the above changes)
- *Buttons (due to improvements, buttons you already have in your scenes might lose references to some components).
- Selection Controls (Checkbox, Switch, RadioButton)
--^ Fixed some color and opacity values for when they are selected or not
--^ Added some layout components in order to have great alignment in layout groups

------ Version 1.0.1 ------
Recommended Unity version is 5.3.0, compatible down to 5.2.2f1.

-- IMPROVEMENTS --
- [Dialogs] 'Destroy on hide' is now optional.
- [Dialogs] Removed the need to specify the image type when passing an OptionDataList to dialogs (ies. SimpleList).
- [Dialogs] Can now have a sprite image in the title area.
- [Dropdowns] Performance when scrolling improved.
- [InputFields] System for validating text has changed (See Scripts/MaterialUtils/InputFieldValidators for examples).
- [Ripples] RippleData now has a PropertyDrawer and look nice in the editor if used by other classes.
- [Tabs] Tab content is now properly vertically positioned.
- [Tabs] TabPage now has a public property to enable/disable a page.
- [Tabs] When a page is disabled, the grey panel with 'Tab disabled' is now optional.
- [Tabs] Deselected tabs now have less opacity (optional setting).
- [Tabs] Removed 'interactable' property from inspector (use respective TabPage to enable/disable instead).
- [Tabs] Ability to scroll through tabs is now an optional setting in TabView.

-- FIXES --
- [Buttons] 'Convert' is now disabled if more than 1 button is selected (as it doesn't work properly).
- [Dialogs] DialogSimple now correctly shows sprites.
- [Dropdowns] Fixed crash on Android devices when dropdowns opened.
- [Ripples] UpdateNormalColor now works properly, and can be reliably used to (smoothly) change a button's color.
- [ScreenView] Fixed issue where ScreenView would block input events from reaching objects visibly above it (ie. NavDrawer).

-- EXAMPLE SCENES UPDATED --
(* You might want to check these out to take a look at some of the above new features)
- Dropdowns
- *InputFields

-- PREFABS UPDATED --
(* You may need to re-create/re-instantiate these in your project to apply some of the above changes)
- None, you're all good!

------ Version 1.0.0 ------
Recommended Unity version is 5.3.0, compatible down to 5.2.2f1.

Initial release!